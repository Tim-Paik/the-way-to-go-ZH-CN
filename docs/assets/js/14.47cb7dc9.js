(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{334:function(t,e,s){"use strict";s.r(e);var o=s(33),i=Object(o.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"_2-8-go-解释器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-go-解释器"}},[this._v("#")]),this._v(" 2.8 Go 解释器")]),this._v(" "),e("p",[this._v("因为 Go 具有像动态语言那样快速编译的能力，自然而然地就有人会问 Go 语言能否在 REPL（read-eval-print loop）编程环境下实现。Sebastien Binet 已经使用这种环境实现了一个 Go 解释器，你可以在这个页面找到："),e("a",{attrs:{href:"https://github.com/sbinet/igo",target:"_blank",rel:"noopener noreferrer"}},[this._v("https://github.com/sbinet/igo"),e("OutboundLink")],1),this._v("。")])])}),[],!1,null,null,null);e.default=i.exports}}]);