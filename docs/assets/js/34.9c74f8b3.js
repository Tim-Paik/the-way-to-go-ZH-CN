(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{356:function(_,v,e){"use strict";e.r(v);var t=e(33),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"_5-0-控制结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-0-控制结构"}},[_._v("#")]),_._v(" 5.0 控制结构")]),_._v(" "),e("p",[_._v("到目前为止，我们看到的 Go 程序都是从 main() 函数开始执行，然后按顺序执行该函数体中的代码。但我们经常会需要只有在满足一些特定情况时才执行某些代码，也就是说在代码里进行条件判断。针对这种需求，Go 提供了下面这些条件结构和分支结构：")]),_._v(" "),e("ul",[e("li",[_._v("if-else 结构")]),_._v(" "),e("li",[_._v("switch 结构")]),_._v(" "),e("li",[_._v("select 结构，用于 channel 的选择（第 14.4 节）")])]),_._v(" "),e("p",[_._v("可以使用迭代或循环结构来重复执行一次或多次某段代码（任务）：")]),_._v(" "),e("ul",[e("li",[_._v("for (range) 结构")])]),_._v(" "),e("p",[_._v("一些如 "),e("code",[_._v("break")]),_._v(" 和 "),e("code",[_._v("continue")]),_._v(" 这样的关键字可以用于中途改变循环的状态。")]),_._v(" "),e("p",[_._v("此外，你还可以使用 "),e("code",[_._v("return")]),_._v(" 来结束某个函数的执行，或使用 "),e("code",[_._v("goto")]),_._v(" 和标签来调整程序的执行位置。")]),_._v(" "),e("p",[_._v("Go 完全省略了 "),e("code",[_._v("if")]),_._v("、"),e("code",[_._v("switch")]),_._v(" 和 "),e("code",[_._v("for")]),_._v(" 结构中条件语句两侧的括号，相比 Java、C++ 和 C# 中减少了很多视觉混乱的因素，同时也使你的代码更加简洁。")])])}),[],!1,null,null,null);v.default=o.exports}}]);